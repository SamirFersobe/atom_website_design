/**
 * Base class that all framework integration packages should implement to start a
 * server instance of the framework to which requests can be proxied as the __js__ backend.
 */
export default class JSBackend {
    protected readonly port: number;
    private started;
    static readonly __type__ = "JSBackend";
    /**
     * Returns true if the provided class extends JSBackend.
     * @param obj A class
     */
    static isSubclass(obj: any): boolean;
    /**
     * @param port The port to which the server instance should bind.
     */
    constructor(port: number);
    /**
     * Starts the app's server build. We don't start the app if the target port is already
     * taken. This will be the case when using layer0 run --serverless to emulate the cloud locally,
     * since serverless-offline sandboxes the app in such a way that it's difficult to keep
     * track of whether or not the app has been started - checking the port is the easiest way -
     * and it will attempt to start the app on every request.
     */
    start(): Promise<void>;
    /**
     * Subclasses must override this method to implement starting the app's server build.
     */
    protected doStart(): Promise<void>;
}
