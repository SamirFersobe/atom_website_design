import { CompiledPreloadOptions, DestinationPreloadConfig, PreloadRequestConfig } from './Preload';
import Router from './Router';
export default class PreloadRequests {
    options: Array<PreloadRequestConfig[] | (() => Promise<PreloadRequestConfig[]>) | (() => PreloadRequestConfig[])>;
    /**
     * Adds prerender config to list
     *
     * @param preloadConfig
     */
    push(...preloadConfig: Array<PreloadRequestConfig[] | (() => Promise<PreloadRequestConfig[]>) | (() => PreloadRequestConfig[])>): void;
    /**
     * Resolves Preload config per destination
     * @param router
     * @private
     */
    static resolveDestinationPreloadConfig(router: Router, destination: string): Promise<DestinationPreloadConfig>;
    /**
     * Resolves compiled Preload config across all destinatons
     * @param router
     * @private
     */
    static resolvePreloadConfig(router: Router): Promise<CompiledPreloadOptions>;
}
