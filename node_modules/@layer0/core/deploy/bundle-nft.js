"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* istanbul ignore file */
const fs_extra_1 = require("fs-extra");
const path_1 = require("path");
const slash_1 = __importDefault(require("slash"));
/**
 * Creates an exploded, tree shaken bundle that more easily fits within Lambda's size limits and
 * reduces code start times.
 * @param src The entry point source file
 * @param destDir The output directory
 */
async function bundleWithNft(src, destDir) {
    const nodeFileTrace = loadNFT();
    process.stdout.write('> Bundling your app with @vercel/nft...');
    const { fileList } = await nodeFileTrace([src]);
    for (let file of fileList) {
        const dest = path_1.join(destDir, file);
        fs_extra_1.mkdirpSync(path_1.dirname(dest));
        fs_extra_1.copyFileSync(file, dest);
    }
    const entryPoint = path_1.join(destDir, 'index.js');
    if (!fs_extra_1.existsSync(entryPoint)) {
        fs_extra_1.writeFileSync(entryPoint, `require('./${slash_1.default(path_1.relative(process.cwd(), src))}')`, 'utf8');
    }
    process.stdout.write(' done.\n');
}
exports.default = bundleWithNft;
function loadNFT() {
    try {
        const { nodeFileTrace } = require('@vercel/nft');
        return nodeFileTrace;
    }
    catch (e) {
        console.log('Required dependency @vercel/nft not found. Install @vercel/nft@^0.21.0 as a devDependency then retry this command.');
        process.exit(1);
    }
}
