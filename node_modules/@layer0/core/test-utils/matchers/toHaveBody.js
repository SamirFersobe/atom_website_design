"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const isString_1 = __importDefault(require("../../utils/isString"));
const getMessage_1 = __importDefault(require("../utils/getMessage"));
/**
 * Matches the response body with the passed string or pattern
 *
 * **Example**
 * ```js
 * expect(response).toHaveBody('<h1>my title</h1>')
 * ...
 * expect(response).toHaveBody(/<h1>.*<\/h1>/)
 * ```
 *
 * @param {MockResponse} received The mocked response
 * @param {String|RegExp} body The value or pattern to match in the response body
 * @returns
 */
function toHaveBody(received, body) {
    const response = received;
    const request = response.request;
    const { body: resBody } = response;
    let pass;
    if (isString_1.default(body)) {
        pass = resBody === body;
    }
    else {
        pass = body.test(resBody);
    }
    return {
        message: () => getMessage_1.default(
        // @ts-ignore
        this, `toHaveBody`, `'${request.path}' [[to]] have body ${body}`, resBody),
        pass,
    };
}
exports.toHaveBody = toHaveBody;
