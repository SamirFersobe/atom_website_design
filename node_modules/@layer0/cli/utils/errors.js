"use strict";

/**
 * Layer0CLIErrors are log in different ways:
 * - 'userMessage' is displayed in red bold in CLI output and added to LD logs
 * - 'errorDetails' is displayed in red normal in CLI output and added to LD logs
 * - 'addToLeDeployerLogs' is only added to LD logs.
 */
class Layer0CLIError extends Error {
  constructor(userMessage, {
    errorDetails,
    addToLeDeployerLogs
  } = {}) {
    super(userMessage);
    this.errorDetails = errorDetails;
    this.addToLeDeployerLogs = addToLeDeployerLogs;
    this.isUserError = true;
  }

}

class Layer0BuildError extends Layer0CLIError {
  constructor(build) {
    let message = 'Something went wrong while deploying on Layer0.\n\n';

    if (build.logs) {
      message += 'Build logs:\n';
    }

    super(message, {
      errorDetails: build.logs
    });
  }

}

class Layer0CLIUserError extends Layer0CLIError {}

class BadRequestError extends Layer0CLIUserError {}

class AuthenticationError extends Layer0CLIUserError {}

class MissingPackageJsonError extends Layer0CLIUserError {}

class MissingLayer0PackagesError extends Layer0CLIUserError {}

class DeployError extends Layer0CLIUserError {}

class ValidationError extends Layer0CLIUserError {}

class LeDeployerApiError extends Layer0CLIUserError {}

exports.Layer0BuildError = Layer0BuildError;
exports.Layer0CLIError = Layer0CLIError;
exports.BadRequestError = BadRequestError;
exports.AuthenticationError = AuthenticationError;
exports.MissingPackageJsonError = MissingPackageJsonError;
exports.MissingLayer0PackagesError = MissingLayer0PackagesError;
exports.DeployError = DeployError;
exports.LeDeployerApiError = LeDeployerApiError;
exports.ValidationError = ValidationError;